@model Model.EF.Book

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookID)

        <div class="col-md-6">
            <div class="form-group row">
                @Html.LabelFor(model => model.BookID, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.BookID, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled"} })
                    @Html.ValidationMessageFor(model => model.BookID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.DiscountPercent, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.DiscountPercent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiscountPercent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.TotalSell, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.TotalSell, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled"} })
                    @Html.ValidationMessageFor(model => model.TotalSell, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CreateByDate, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.CreateByDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreateByDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group row">
                @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.PublicByDate, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PublicByDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PublicByDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.BookCover, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.BookCover, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BookCover, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.BookDescription, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.BookDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BookDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.AuthorID, "AuthorID", htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("AuthorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.ProducerID, "ProducerID", htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("ProducerID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProducerID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
